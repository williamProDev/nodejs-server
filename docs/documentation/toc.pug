//-section.toc
//-  h2
//-    a(href="/documentation/#top") Documentation
//-  ul
//-    each tutorial, frag in documentation
//-      li
//-        if (tutorial.sections.length)
//-          label.more ›
//-        a(href="/documentation/" + frag + "/#top")= tutorial.title
//-        if (tutorial.sections.length)
//-          ul
//-            each name in tutorial.sections
//-              li
//-                a(href="/documentation/" + frag + "/#" + slug(name))= name
//-
 
section.toc
  h2
    a(href="/documentation/#top") Documentation
  ul
    li
      label.more ›
      a.good(href="/documentation/options/#top") Options
      ul
        li
          a.good(href="/documentation/options/#port")
            code port
        li
          a.good(href="/documentation/options/#secret")
            code secret
        li
          a.good(href="/documentation/options/#public")
            code public
        li
          a.good(href="/documentation/options/#views")
            code views
        li
          a.good(href="/documentation/options/#engine")
            code engine
        li
          a.good(href="/documentation/options/#env")
            code env
        li
          a.good(href="/documentation/options/#log")
            code log
        li
          a.mid(href="/documentation/options/#core")
            code core
    li
      label.more ›
      a.mid(href="/documentation/middleware/#top") Middleware
      ul
        li 
          a.mid(href="/documentation/middleware/#context") Context
        li 
          a.good(href="/documentation/middleware/#synchronous") Synchronous
        li 
          a.mid(href="/documentation/middleware/#asynchronous") Asynchronous
        li 
          a.mid(href="/documentation/middleware/#asynchronous") Return value
        li 
          a.mid(href="/documentation/middleware/#express-middleware") From express
    li
      label.more ›
      a.good(href="/documentation/router/#top") Router
      ul.size-100
        li
          a.good(href="/documentation/router/#get-") get()
        li
          a.good(href="/documentation/router/#post-") post()
        li
          a.good(href="/documentation/router/#put-") put()
        li
          a.good(href="/documentation/router/#del-") del()
        li
          a.good(href="/documentation/router/#error-") error()
        li
          a.good(href="/documentation/router/#sub-") sub()
        //- li
        //-   a.mid(href="/documentation/router/#websockets") socket()
    li
      label.more ›
      a.bad(href="#") Reply
      ul
        li
          a.bad(href="#") cookie()
        li
          a.bad(href="#") download()
        li
          a.bad(href="#") end()
        li
          a.bad(href="#") file()
        li
          a.bad(href="#") header()
        li
          a.bad(href="#") json()
        li
          a.bad(href="#") jsonp()
        li
          a.bad(href="#") redirect()
        li
          a.bad(href="#") render()
        li
          a.bad(href="#") send()
        li
          a.bad(href="#") status()
        li
          a.bad(href="#") type()
    li
      label.more ›
      a.bad(href="#") Testing
        ul
          li
            a.bad(href="#") Setup
          li
            a.bad(href="#") Unit
          li
            a.bad(href="#") Integration
          li ...
    li
      label.more ›
      a.bad(href="#") Errors
      ul
        li
          a.bad(href="#") PortAlreadyUsed
        li
          a.bad(href="#") MissingMiddleware
        li
          a.bad(href="#") InvalidMiddleware
    li
      label.more ›
      a.bad(href="/documentation/advanced/#top") Advanced
      ul
        li
          a.mid(href="/documentation/advanced/#creating-middleware") Write middleware
        li
          a.bad(href="/documentation/advanced/#") Write plugins
        li
          a.bad(href="/documentation/advanced/#") Contributing
